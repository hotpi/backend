{"version":3,"sources":["webpack:///webpack/bootstrap 51d4a31481f82f508522","webpack:///./index.js","webpack:///external \"bluebird\"","webpack:///external \"mongoose\"","webpack:///./config/env/index.js","webpack:///external \"path\"","webpack:///./config/env ^\\.\\/.*$","webpack:///./config/env/development.js","webpack:///./config/env/production.js","webpack:///./config/env/test.js","webpack:///./config/express.js","webpack:///external \"express\"","webpack:///external \"morgan\"","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"compression\"","webpack:///external \"method-override\"","webpack:///external \"cors\"","webpack:///external \"http-status\"","webpack:///external \"express-winston\"","webpack:///external \"express-validation\"","webpack:///external \"helmet\"","webpack:///./config/winston.js","webpack:///external \"winston\"","webpack:///./server/routes/index.js","webpack:///./server/helpers/APIError.js","webpack:///external \"debug\""],"names":["promisifyAll","connect","db","server","socketOptions","keepAlive","connection","on","Error","debug","require","console","log","listen","port","env","process","NODE_ENV","config","default","defaults","root","join","__dirname","jwtSecret","app","use","json","urlencoded","extended","requestWhitelist","push","responseWhitelist","logger","winstonInstance","meta","msg","colorStatus","err","req","res","next","ValidationError","unifiedErrorMessage","errors","map","error","messages","status","apiError","message","isPublic","NOT_FOUND","errorLogger","stack","Logger","transports","Console","colorize","router","Router","get","send","ExtendableError","name","constructor","isOperational","captureStackTrace","APIError","INTERNAL_SERVER_ERROR"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACtCA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,oBAAQA,YAAR;;AAEA;AACA,oBAASC,OAAT,CAAiB,cAAOC,EAAxB,EAA4B,EAAEC,QAAQ,EAAEC,eAAe,EAAEC,WAAW,CAAb,EAAjB,EAAV,EAA5B;AACA,oBAASC,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,YAAM;AACpC,SAAM,IAAIC,KAAJ,qCAA4C,cAAON,EAAnD,CAAN;AACD,EAFD;;AAIA,KAAMO,QAAQ,mBAAAC,CAAQ,EAAR,EAAiB,kCAAjB,CAAd;AACAC,SAAQC,GAAR;AACA;AACA,mBAAIC,MAAJ,CAAW,cAAOC,IAAlB,EAAwB,YAAM;AAC5BL,qCAAgC,cAAOK,IAAvC,UAAgD,cAAOC,GAAvD;AACD,EAFD;;;;;;;;ACjBA,sC;;;;;;ACAA,sC;;;;;;;;;;;;;;ACAA;;;;;;AAEA,KAAMA,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,KAAMC,SAAS,2BAAAR,GAAaK,GAAb,EAAoBI,OAAnC;;AAEA,KAAMC,WAAW;AACfC,SAAM,eAAKC,IAAL,CAAUC,SAAV,EAAqB,KAArB;AADS,EAAjB;;gCAKKH,Q,EACAF,M;;;;;;;ACXL,kC;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,uDAAuD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;mBCrBe;AACbH,QAAK,aADQ;AAEbS,cAAW,sCAFE;AAGbtB,OAAI,oCAHS;AAIbY,SAAM;AAJO,E;;;;;;;;;;;mBCAA;AACbC,QAAK,YADQ;AAEbS,cAAW,sCAFE;AAGbtB,OAAI,oCAHS;AAIbY,SAAM;AAJO,E;;;;;;;;;;;mBCAA;AACbC,QAAK,MADQ;AAEbS,cAAW,sCAFE;AAGbtB,OAAI,oCAHS;AAIbY,SAAM;AAJO,E;;;;;;;;;;;;ACAf;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,KAAMW,MAAM,wBAAZ;;AAEA,KAAI,cAAOV,GAAP,KAAe,aAAnB,EAAkC;AAChCU,OAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACD;;AAED;AACAD,KAAIC,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAF,KAAIC,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;;AAEAJ,KAAIC,GAAJ,CAAQ,6BAAR;AACAD,KAAIC,GAAJ,CAAQ,4BAAR;AACAD,KAAIC,GAAJ,CAAQ,+BAAR;;AAEA;AACAD,KAAIC,GAAJ,CAAQ,uBAAR;;AAEA;AACAD,KAAIC,GAAJ,CAAQ,qBAAR;;AAEA;AACA,KAAI,cAAOX,GAAP,KAAe,aAAnB,EAAkC;AAChC,4BAAee,gBAAf,CAAgCC,IAAhC,CAAqC,MAArC;AACA,4BAAeC,iBAAf,CAAiCD,IAAjC,CAAsC,MAAtC;AACAN,OAAIC,GAAJ,CAAQ,yBAAeO,MAAf,CAAsB;AAC5BC,uCAD4B;AAE5BC,WAAM,IAFsB,EAEf;AACbC,UAAK,2EAHuB;AAI5BC,kBAAa,IAJe,CAIT;AAJS,IAAtB,CAAR;AAMD;;AAED;AACAZ,KAAIC,GAAJ,CAAQ,GAAR;;AAEA;AACAD,KAAIC,GAAJ,CAAQ,UAACY,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/B,OAAIH,eAAe,4BAAkBI,eAArC,EAAsD;AACpD;AACA,SAAMC,sBAAsBL,IAAIM,MAAJ,CAAWC,GAAX,CAAe;AAAA,cAASC,MAAMC,QAAN,CAAezB,IAAf,CAAoB,IAApB,CAAT;AAAA,MAAf,EAAmDA,IAAnD,CAAwD,OAAxD,CAA5B;AACA,SAAMwB,QAAQ,uBAAaH,mBAAb,EAAkCL,IAAIU,MAAtC,EAA8C,IAA9C,CAAd;AACA,YAAOP,KAAKK,KAAL,CAAP;AACD,IALD,MAKO,IAAI,EAAER,iCAAF,CAAJ,EAAgC;AACrC,SAAMW,WAAW,uBAAaX,IAAIY,OAAjB,EAA0BZ,IAAIU,MAA9B,EAAsCV,IAAIa,QAA1C,CAAjB;AACA,YAAOV,KAAKQ,QAAL,CAAP;AACD;AACD,UAAOR,KAAKH,GAAL,CAAP;AACD,EAXD;;AAaA;AACAb,KAAIC,GAAJ,CAAQ,UAACa,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,OAAMH,MAAM,uBAAa,eAAb,EAA8B,qBAAWc,SAAzC,CAAZ;AACA,UAAOX,KAAKH,GAAL,CAAP;AACD,EAHD;;AAKA;AACA,KAAI,cAAOvB,GAAP,KAAe,MAAnB,EAA2B;AACzBU,OAAIC,GAAJ,CAAQ,yBAAe2B,WAAf,CAA2B;AACjCnB;AADiC,IAA3B,CAAR;AAGD;;AAED;AACAT,KAAIC,GAAJ,CAAQ,UAACY,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA,UAA0B;AAChCD,SAAIQ,MAAJ,CAAWV,IAAIU,MAAf,EAAuBrB,IAAvB,CAA4B;AAC1BuB,gBAASZ,IAAIa,QAAJ,GAAeb,IAAIY,OAAnB,GAA6B,qBAAWZ,IAAIU,MAAf,CADZ;AAE1BM,cAAO,cAAOvC,GAAP,KAAe,aAAf,GAA+BuB,IAAIgB,KAAnC,GAA2C;AAFxB,MAA5B;AADM;AAAA,EAAR;;mBAOe7B,G;;;;;;ACtFf,qC;;;;;;ACAA,oC;;;;;;ACAA,yC;;;;;;ACAA,2C;;;;;;ACAA,yC;;;;;;ACAA,6C;;;;;;ACAA,kC;;;;;;ACAA,yC;;;;;;ACAA,6C;;;;;;ACAA,gD;;;;;;ACAA,oC;;;;;;;;;;;;ACAA;;;;;;AAEA,KAAMQ,SAAS,IAAK,kBAAQsB,MAAb,CAAqB;AAClCC,eAAY,CACV,IAAK,kBAAQA,UAAR,CAAmBC,OAAxB,CAAiC;AAC/B9B,WAAM,IADyB;AAE/B+B,eAAU;AAFqB,IAAjC,CADU;AADsB,EAArB,CAAf;;mBASezB,M;;;;;;ACXf,qC;;;;;;;;;;;;ACAA;;;;;;AAEA;AACA;;AAEA,KAAM0B,SAAS,kBAAQC,MAAR,EAAf,C,CAAiC;;AAEjC;AACAD,QAAOE,GAAP,CAAW,eAAX,EAA4B,UAACtB,GAAD,EAAMC,GAAN;AAAA,UAC1BA,IAAIsB,IAAJ,CAAS,IAAT,CAD0B;AAAA,EAA5B;;AAIA;AACA;;AAEA;AACA;;mBAEeH,M;;;;;;;;;;;;AClBf;;;;;;;;;;;;AAEA;;;KAGMI,e;;;AACJ,4BAAYb,OAAZ,EAAqBF,MAArB,EAA6BG,QAA7B,EAAuC;AAAA;;AAAA,mIAC/BD,OAD+B;;AAErC,WAAKc,IAAL,GAAY,MAAKC,WAAL,CAAiBD,IAA7B;AACA,WAAKd,OAAL,GAAeA,OAAf;AACA,WAAKF,MAAL,GAAcA,MAAd;AACA,WAAKG,QAAL,GAAgBA,QAAhB;AACA,WAAKe,aAAL,GAAqB,IAArB,CANqC,CAMV;AAC3B1D,WAAM2D,iBAAN,QAA8B,MAAKF,WAAL,CAAiBD,IAA/C;AAPqC;AAQtC;;;GAT2BxD,K;;AAY9B;;;;;;KAIM4D,Q;;;AACJ;;;;;;AAMA,qBAAYlB,OAAZ,EAAkF;AAAA,SAA7DF,MAA6D,yDAApD,qBAAWqB,qBAAyC;AAAA,SAAlBlB,QAAkB,yDAAP,KAAO;;AAAA;;AAAA,gHAC1ED,OAD0E,EACjEF,MADiE,EACzDG,QADyD;AAEjF;;;GAToBY,e;;mBAYRK,Q;;;;;;ACjCf,mC","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 51d4a31481f82f508522\n **/","import Promise from 'bluebird';\nimport mongoose from 'mongoose';\nimport app from './config/express';\nimport config from './config/env';\n\n// promisify mongoose\nPromise.promisifyAll(mongoose);\n\n// connect to mongo db\nmongoose.connect(config.db, { server: { socketOptions: { keepAlive: 1 } } });\nmongoose.connection.on('error', () => {\n  throw new Error(`unable to connect to database: ${config.db}`);\n});\n\nconst debug = require('debug')('bachelorarbeit-node-server:index');\nconsole.log(config)\n// listen on port config.port\napp.listen(config.port, () => {\n  debug(`server started on port ${config.port} (${config.env})`);\n});\n\nexport default app;\n\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","module.exports = require(\"bluebird\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"bluebird\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"mongoose\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"mongoose\"\n ** module id = 3\n ** module chunks = 0\n **/","import path from 'path';\n\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(`./${env}`).default;\n\nconst defaults = {\n  root: path.join(__dirname, '/..')\n};\n\nexport default {\n  ...defaults,\n  ...config\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./config/env/index.js\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 5\n ** module chunks = 0\n **/","var map = {\n\t\"./development\": 7,\n\t\"./development.js\": 7,\n\t\"./index\": 4,\n\t\"./index.js\": 4,\n\t\"./production\": 8,\n\t\"./production.js\": 8,\n\t\"./test\": 9,\n\t\"./test.js\": 9\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./config/env ^\\.\\/.*$\n ** module id = 6\n ** module chunks = 0\n **/","export default {\n  env: 'development',\n  jwtSecret: '0a6b944d-d2fb-46fc-a85e-0295c986cd9f',\n  db: 'mongodb://localhost/bachelorarbeit',\n  port: 3001\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./config/env/development.js\n **/","export default {\n  env: 'production',\n  jwtSecret: '0a6b944d-d2fb-46fc-a85e-0295c986cd9f',\n  db: 'mongodb://localhost/bachelorarbeit',\n  port: 3001\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./config/env/production.js\n **/","export default {\n  env: 'test',\n  jwtSecret: '0a6b944d-d2fb-46fc-a85e-0295c986cd9f',\n  db: 'mongodb://localhost/bachelorarbeit',\n  port: 3001\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./config/env/test.js\n **/","import express from 'express';\nimport logger from 'morgan';\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport compress from 'compression';\nimport methodOverride from 'method-override';\nimport cors from 'cors';\nimport httpStatus from 'http-status';\nimport expressWinston from 'express-winston';\nimport expressValidation from 'express-validation';\nimport helmet from 'helmet';\nimport winstonInstance from './winston';\nimport routes from '../server/routes';\nimport config from './env';\nimport APIError from '../server/helpers/APIError';\n\nconst app = express();\n\nif (config.env === 'development') {\n  app.use(logger('dev'));\n}\n\n// parse body params and attache them to req.body\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.use(cookieParser());\napp.use(compress());\napp.use(methodOverride());\n\n// secure apps by setting various HTTP headers\napp.use(helmet());\n\n// enable CORS - Cross Origin Resource Sharing\napp.use(cors());\n\n// enable detailed API logging in dev env\nif (config.env === 'development') {\n  expressWinston.requestWhitelist.push('body');\n  expressWinston.responseWhitelist.push('body');\n  app.use(expressWinston.logger({\n    winstonInstance,\n    meta: true, \t// optional: log meta data about request (defaults to true)\n    msg: 'HTTP {{req.method}} {{req.url}} {{res.statusCode}} {{res.responseTime}}ms',\n    colorStatus: true \t// Color the status code (default green, 3XX cyan, 4XX yellow, 5XX red).\n  }));\n}\n\n// mount all routes on /api path\napp.use('/', routes);\n\n// if error is not an instanceOf APIError, convert it.\napp.use((err, req, res, next) => {\n  if (err instanceof expressValidation.ValidationError) {\n    // validation error contains errors which is an array of error each containing message[]\n    const unifiedErrorMessage = err.errors.map(error => error.messages.join('. ')).join(' and ');\n    const error = new APIError(unifiedErrorMessage, err.status, true);\n    return next(error);\n  } else if (!(err instanceof APIError)) {\n    const apiError = new APIError(err.message, err.status, err.isPublic);\n    return next(apiError);\n  }\n  return next(err);\n});\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n  const err = new APIError('API not found', httpStatus.NOT_FOUND);\n  return next(err);\n});\n\n// log error in winston transports except when executing test suite\nif (config.env !== 'test') {\n  app.use(expressWinston.errorLogger({\n    winstonInstance\n  }));\n}\n\n// error handler, send stacktrace only during development\napp.use((err, req, res, next) =>\t\t// eslint-disable-line no-unused-vars\n  res.status(err.status).json({\n    message: err.isPublic ? err.message : httpStatus[err.status],\n    stack: config.env === 'development' ? err.stack : {}\n  })\n);\n\nexport default app;\n\n\n\n/** WEBPACK FOOTER **\n ** ./config/express.js\n **/","module.exports = require(\"express\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express\"\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = require(\"morgan\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"morgan\"\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = require(\"body-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"body-parser\"\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = require(\"cookie-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"cookie-parser\"\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = require(\"compression\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"compression\"\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = require(\"method-override\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"method-override\"\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = require(\"cors\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"cors\"\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = require(\"http-status\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"http-status\"\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = require(\"express-winston\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express-winston\"\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = require(\"express-validation\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express-validation\"\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = require(\"helmet\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"helmet\"\n ** module id = 21\n ** module chunks = 0\n **/","import winston from 'winston';\n\nconst logger = new (winston.Logger)({\n  transports: [\n    new (winston.transports.Console)({\n      json: true,\n      colorize: true\n    })\n  ]\n});\n\nexport default logger;\n\n\n\n/** WEBPACK FOOTER **\n ** ./config/winston.js\n **/","module.exports = require(\"winston\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"winston\"\n ** module id = 23\n ** module chunks = 0\n **/","import express from 'express';\n\n//import userRoutes from './user';\n//import authRoutes from './auth'; /* Not needed */\n\nconst router = express.Router();\t// eslint-disable-line new-cap\n\n/** GET /health-check - Check service health */\nrouter.get('/health-check', (req, res) =>\n  res.send('OK')\n);\n\n// mount user routes at /users\n//router.use('/users', userRoutes);\n\n// mount auth routes at /auth\n//router.use('/auth', authRoutes);\n\nexport default router;\n\n\n\n/** WEBPACK FOOTER **\n ** ./server/routes/index.js\n **/","import httpStatus from 'http-status';\n\n/**\n * @extends Error\n */\nclass ExtendableError extends Error {\n  constructor(message, status, isPublic) {\n    super(message);\n    this.name = this.constructor.name;\n    this.message = message;\n    this.status = status;\n    this.isPublic = isPublic;\n    this.isOperational = true;\t// This is required since bluebird 4 doesn't append it anymore.\n    Error.captureStackTrace(this, this.constructor.name);\n  }\n}\n\n/**\n * Class representing an API error.\n * @extends ExtendableError\n */\nclass APIError extends ExtendableError {\n  /**\n   * Creates an API error.\n   * @param {string} message - Error message.\n   * @param {number} status - HTTP status code of error.\n   * @param {boolean} isPublic - Whether the message should be visible to user or not.\n   */\n  constructor(message, status = httpStatus.INTERNAL_SERVER_ERROR, isPublic = false) {\n    super(message, status, isPublic);\n  }\n}\n\nexport default APIError;\n\n\n\n/** WEBPACK FOOTER **\n ** ./server/helpers/APIError.js\n **/","module.exports = require(\"debug\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"debug\"\n ** module id = 26\n ** module chunks = 0\n **/"],"sourceRoot":""}